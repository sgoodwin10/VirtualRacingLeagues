services:
  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Use development stage with Node.js
    container_name: ${DOCKER_CONTAINER_NAME}-app
    restart: unless-stopped
    working_dir: /var/www
    # Playwright-specific configurations
    init: true  # Prevents zombie processes
    ipc: host   # Prevents Chromium memory exhaustion crashes
    cap_add:
      - SYS_ADMIN  # Required for Chromium sandboxing in development
    environment:
      - PLAYWRIGHT_BROWSERS_PATH=/home/laravel/.cache/playwright
    volumes:
      - ./:/var/www:delegated
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      # Dependency caching - override delegated mount for these directories
      - vendor:/var/www/vendor
      - node_modules:/var/www/node_modules
      # Cache directories for faster installs
      - composer_cache:/home/laravel/.composer/cache
      - npm_cache:/home/laravel/.npm
      - npm_global:/home/laravel/.npm-global
      - playwright_browsers:/home/laravel/.cache/playwright
    ports:
      - "5173:5173"  # Vite dev server
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
    extra_hosts:
      - "${APP_ROOT_DOMAIN}:host-gateway"
      - "app.${APP_ROOT_DOMAIN}:host-gateway"
      - "admin.${APP_ROOT_DOMAIN}:host-gateway"
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: ${DOCKER_CONTAINER_NAME}-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www:delegated
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - app

  # MariaDB Service
  mariadb:
    image: mariadb:10.11
    container_name: ${DOCKER_CONTAINER_NAME}-mariadb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/conf.d:/etc/mysql/conf.d:ro
    ports:
      - "3307:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: ${DOCKER_CONTAINER_NAME}-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Elasticsearch Service (for future use)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ${DOCKER_CONTAINER_NAME}-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  # Mailpit Service (Email testing)
  mailpit:
    image: axllent/mailpit:latest
    container_name: ${DOCKER_CONTAINER_NAME}-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP server
    networks:
      - app-network

networks:
  app-network:
      driver: bridge
      name: ${DOCKER_NETWORK_NAME}

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  # Dependency caching volumes for faster rebuilds and startups
  vendor:
    driver: local
  node_modules:
    driver: local
  composer_cache:
    driver: local
  npm_cache:
    driver: local
  npm_global:
    driver: local
  playwright_browsers:
    driver: local
